{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","images","setImages","useEffect","a","axios","get","image_responses","data","onChange","style","marginTop","align","plugins","map","image","Message","Header","List","Item","device_name","frame","width","src","indexOf","thumbnails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAyDeA,EApDH,WAAO,IAAD,EACUC,mBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAESF,mBAAS,IAFlB,mBAETG,EAFS,KAEFC,EAFE,KAKhBC,oBAAS,sBAAE,4BAAAC,EAAA,sEACqBC,IAAMC,IAAN,wCADrB,OACHC,EADG,OAETL,EAAUK,EAAgBC,MAFjB,2CAGN,IAEL,IAAMC,EAAW,SAAAV,GACjBC,EAASD,IAIT,OACE,sBAAKW,MAAO,CAACC,UAAU,QAAvB,UACE,cAAC,IAAD,CACEZ,MAAOA,EACPU,SAAUA,EACVC,MAAO,CAACE,MAAM,UACdC,QAAS,CAAC,UAJZ,SAMGZ,EAAOa,KAAI,SAAAC,GACV,OACI,gCACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAQC,OAAT,sBACA,eAACD,EAAA,EAAQE,KAAT,WACE,eAACF,EAAA,EAAQG,KAAT,2BAA4BJ,EAAMK,eAClC,eAACJ,EAAA,EAAQG,KAAT,qBAAsBJ,EAAMM,eAGhC,qBAAiCX,MAAO,CAACY,MAAM,SAAWC,IAAG,iCAA4BR,EAAMA,QAArFd,EAAOuB,QAAQT,YAMnC,cAAC,OAAD,CACEhB,MAAOA,EACPU,SAAUA,EACVgB,WACExB,EAAOa,KAAK,SAAAC,GACV,OAAQ,qBAAiCL,MAAO,CAACY,MAAM,QAASC,IAAG,iCAA4BR,EAAMA,QAAnFd,EAAOuB,QAAQT,aCrC9BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ef1229f.chunk.js","sourcesContent":["import Carousel, { Dots } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css'; import { useState,useEffect } from 'react';\nimport axios from 'axios';\nimport { Message } from 'semantic-ui-react'\n\nconst App = () => {\n  const [value, setValue] = useState(0);\n  const [images,setImages]=useState([]);  \n\n\n  useEffect( async () => {\n    const image_responses = await axios.get(`https://picamera.novit.ai/api/latest`)\n    setImages(image_responses.data);\n    }, []);\n\n  const onChange = value => {\n  setValue(value);\n  }\n  \n\n  return (\n    <div style={{marginTop:'40px'}}>\n      <Carousel\n        value={value}\n        onChange={onChange}\n        style={{align:'center'}}\n        plugins={['arrows']}\n      >\n        {images.map(image=>{\n          return (\n              <div>\n                <Message>\n                  <Message.Header>Pi cctv</Message.Header>\n                  <Message.List>\n                    <Message.Item>Device name: {image.device_name}</Message.Item>\n                    <Message.Item>Frame: {image.frame}</Message.Item>\n                  </Message.List>\n                </Message>\n                <img key={images.indexOf(image)} style={{width:'800px'}}  src={`data:image/jpeg;base64,${image.image}`} />\n              </div>\n\n                )\n        })}\n      </Carousel>\n      <Dots\n        value={value}\n        onChange={onChange}\n        thumbnails={ \n          images.map( image => {\n            return (<img key={images.indexOf(image)} style={{width:'98px'}} src={`data:image/jpeg;base64,${image.image}`} />)\n            })\n         }\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}